// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: customisation.proto

#include "customisation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR UpdateRuntimeOptionsRequest::UpdateRuntimeOptionsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.instance_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.pluginoptions_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.runtimeoptions_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateRuntimeOptionsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRuntimeOptionsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRuntimeOptionsRequestDefaultTypeInternal() {}
  union {
    UpdateRuntimeOptionsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRuntimeOptionsRequestDefaultTypeInternal _UpdateRuntimeOptionsRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateRuntimeOptionsResponse::UpdateRuntimeOptionsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.runtimeoptions_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateRuntimeOptionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateRuntimeOptionsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateRuntimeOptionsResponseDefaultTypeInternal() {}
  union {
    UpdateRuntimeOptionsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateRuntimeOptionsResponseDefaultTypeInternal _UpdateRuntimeOptionsResponse_default_instance_;
PROTOBUF_CONSTEXPR RuntimeOptions_Resolution::RuntimeOptions_Resolution(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RuntimeOptions_ResolutionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuntimeOptions_ResolutionDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuntimeOptions_ResolutionDefaultTypeInternal() {}
  union {
    RuntimeOptions_Resolution _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuntimeOptions_ResolutionDefaultTypeInternal _RuntimeOptions_Resolution_default_instance_;
PROTOBUF_CONSTEXPR RuntimeOptions_PixelStreaming_WebRTC::RuntimeOptions_PixelStreaming_WebRTC(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.maxfps_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RuntimeOptions_PixelStreaming_WebRTCDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuntimeOptions_PixelStreaming_WebRTCDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuntimeOptions_PixelStreaming_WebRTCDefaultTypeInternal() {}
  union {
    RuntimeOptions_PixelStreaming_WebRTC _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuntimeOptions_PixelStreaming_WebRTCDefaultTypeInternal _RuntimeOptions_PixelStreaming_WebRTC_default_instance_;
PROTOBUF_CONSTEXPR RuntimeOptions_PixelStreaming::RuntimeOptions_PixelStreaming(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.webrtc_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RuntimeOptions_PixelStreamingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuntimeOptions_PixelStreamingDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuntimeOptions_PixelStreamingDefaultTypeInternal() {}
  union {
    RuntimeOptions_PixelStreaming _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuntimeOptions_PixelStreamingDefaultTypeInternal _RuntimeOptions_PixelStreaming_default_instance_;
PROTOBUF_CONSTEXPR RuntimeOptions_EnvironmentVariablesEntry_DoNotUse::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct RuntimeOptions_EnvironmentVariablesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuntimeOptions_EnvironmentVariablesEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuntimeOptions_EnvironmentVariablesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    RuntimeOptions_EnvironmentVariablesEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuntimeOptions_EnvironmentVariablesEntry_DoNotUseDefaultTypeInternal _RuntimeOptions_EnvironmentVariablesEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR RuntimeOptions_VolumeMounts::RuntimeOptions_VolumeMounts(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.mountpath_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.readonly_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RuntimeOptions_VolumeMountsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuntimeOptions_VolumeMountsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuntimeOptions_VolumeMountsDefaultTypeInternal() {}
  union {
    RuntimeOptions_VolumeMounts _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuntimeOptions_VolumeMountsDefaultTypeInternal _RuntimeOptions_VolumeMounts_default_instance_;
PROTOBUF_CONSTEXPR RuntimeOptions::RuntimeOptions(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.args_)*/{}
  , /*decltype(_impl_.environmentvariables_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_.volumemounts_)*/{}
  , /*decltype(_impl_.resolution_)*/nullptr
  , /*decltype(_impl_.pixelstreaming_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RuntimeOptionsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RuntimeOptionsDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RuntimeOptionsDefaultTypeInternal() {}
  union {
    RuntimeOptions _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RuntimeOptionsDefaultTypeInternal _RuntimeOptions_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_customisation_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_customisation_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_customisation_2eproto = nullptr;

const uint32_t TableStruct_customisation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateRuntimeOptionsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateRuntimeOptionsRequest, _impl_.instance_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateRuntimeOptionsRequest, _impl_.pluginoptions_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateRuntimeOptionsRequest, _impl_.runtimeoptions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateRuntimeOptionsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateRuntimeOptionsResponse, _impl_.runtimeoptions_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_Resolution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_Resolution, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_Resolution, _impl_.y_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_PixelStreaming_WebRTC, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_PixelStreaming_WebRTC, _impl_.maxfps_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_PixelStreaming, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_PixelStreaming, _impl_.webrtc_),
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_VolumeMounts, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_VolumeMounts, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_VolumeMounts, _impl_.mountpath_),
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions_VolumeMounts, _impl_.readonly_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions, _impl_.resolution_),
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions, _impl_.args_),
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions, _impl_.environmentvariables_),
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions, _impl_.volumemounts_),
  PROTOBUF_FIELD_OFFSET(::proto::RuntimeOptions, _impl_.pixelstreaming_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::UpdateRuntimeOptionsRequest)},
  { 9, -1, -1, sizeof(::proto::UpdateRuntimeOptionsResponse)},
  { 16, -1, -1, sizeof(::proto::RuntimeOptions_Resolution)},
  { 24, -1, -1, sizeof(::proto::RuntimeOptions_PixelStreaming_WebRTC)},
  { 31, -1, -1, sizeof(::proto::RuntimeOptions_PixelStreaming)},
  { 38, 46, -1, sizeof(::proto::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse)},
  { 48, -1, -1, sizeof(::proto::RuntimeOptions_VolumeMounts)},
  { 57, -1, -1, sizeof(::proto::RuntimeOptions)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_UpdateRuntimeOptionsRequest_default_instance_._instance,
  &::proto::_UpdateRuntimeOptionsResponse_default_instance_._instance,
  &::proto::_RuntimeOptions_Resolution_default_instance_._instance,
  &::proto::_RuntimeOptions_PixelStreaming_WebRTC_default_instance_._instance,
  &::proto::_RuntimeOptions_PixelStreaming_default_instance_._instance,
  &::proto::_RuntimeOptions_EnvironmentVariablesEntry_DoNotUse_default_instance_._instance,
  &::proto::_RuntimeOptions_VolumeMounts_default_instance_._instance,
  &::proto::_RuntimeOptions_default_instance_._instance,
};

const char descriptor_table_protodef_customisation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023customisation.proto\022\005proto\"u\n\033UpdateRu"
  "ntimeOptionsRequest\022\020\n\010instance\030\001 \001(\t\022\025\n"
  "\rpluginOptions\030\002 \001(\t\022-\n\016runtimeOptions\030\003"
  " \001(\0132\025.proto.RuntimeOptions\"M\n\034UpdateRun"
  "timeOptionsResponse\022-\n\016runtimeOptions\030\001 "
  "\001(\0132\025.proto.RuntimeOptions\"\250\004\n\016RuntimeOp"
  "tions\0224\n\nresolution\030\001 \001(\0132 .proto.Runtim"
  "eOptions.Resolution\022\014\n\004args\030\002 \003(\t\022M\n\024env"
  "ironmentVariables\030\003 \003(\0132/.proto.RuntimeO"
  "ptions.EnvironmentVariablesEntry\0228\n\014volu"
  "meMounts\030\004 \003(\0132\".proto.RuntimeOptions.Vo"
  "lumeMounts\022<\n\016pixelStreaming\030\005 \001(\0132$.pro"
  "to.RuntimeOptions.PixelStreaming\032\"\n\nReso"
  "lution\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\032g\n\016PixelStr"
  "eaming\022;\n\006webRTC\030\001 \001(\0132+.proto.RuntimeOp"
  "tions.PixelStreaming.WebRTC\032\030\n\006WebRTC\022\016\n"
  "\006maxFPS\030\001 \001(\003\032;\n\031EnvironmentVariablesEnt"
  "ry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\032A\n\014Vo"
  "lumeMounts\022\014\n\004name\030\001 \001(\t\022\021\n\tmountPath\030\002 "
  "\001(\t\022\020\n\010readOnly\030\003 \001(\0102\200\001\n\033InstanceCustom"
  "isationPlugin\022a\n\024UpdateRuntimeOptions\022\"."
  "proto.UpdateRuntimeOptionsRequest\032#.prot"
  "o.UpdateRuntimeOptionsResponse\"\000B:Z8gith"
  "ub.com/scalablepixelstreaming/apis/pkg/c"
  "ustomisationb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_customisation_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_customisation_2eproto = {
    false, false, 980, descriptor_table_protodef_customisation_2eproto,
    "customisation.proto",
    &descriptor_table_customisation_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_customisation_2eproto::offsets,
    file_level_metadata_customisation_2eproto, file_level_enum_descriptors_customisation_2eproto,
    file_level_service_descriptors_customisation_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_customisation_2eproto_getter() {
  return &descriptor_table_customisation_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_customisation_2eproto(&descriptor_table_customisation_2eproto);
namespace proto {

// ===================================================================

class UpdateRuntimeOptionsRequest::_Internal {
 public:
  static const ::proto::RuntimeOptions& runtimeoptions(const UpdateRuntimeOptionsRequest* msg);
};

const ::proto::RuntimeOptions&
UpdateRuntimeOptionsRequest::_Internal::runtimeoptions(const UpdateRuntimeOptionsRequest* msg) {
  return *msg->_impl_.runtimeoptions_;
}
UpdateRuntimeOptionsRequest::UpdateRuntimeOptionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateRuntimeOptionsRequest)
}
UpdateRuntimeOptionsRequest::UpdateRuntimeOptionsRequest(const UpdateRuntimeOptionsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateRuntimeOptionsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.instance_){}
    , decltype(_impl_.pluginoptions_){}
    , decltype(_impl_.runtimeoptions_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.instance_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instance_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_instance().empty()) {
    _this->_impl_.instance_.Set(from._internal_instance(), 
      _this->GetArenaForAllocation());
  }
  _impl_.pluginoptions_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pluginoptions_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_pluginoptions().empty()) {
    _this->_impl_.pluginoptions_.Set(from._internal_pluginoptions(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_runtimeoptions()) {
    _this->_impl_.runtimeoptions_ = new ::proto::RuntimeOptions(*from._impl_.runtimeoptions_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateRuntimeOptionsRequest)
}

inline void UpdateRuntimeOptionsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.instance_){}
    , decltype(_impl_.pluginoptions_){}
    , decltype(_impl_.runtimeoptions_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.instance_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.instance_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.pluginoptions_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.pluginoptions_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateRuntimeOptionsRequest::~UpdateRuntimeOptionsRequest() {
  // @@protoc_insertion_point(destructor:proto.UpdateRuntimeOptionsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRuntimeOptionsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.instance_.Destroy();
  _impl_.pluginoptions_.Destroy();
  if (this != internal_default_instance()) delete _impl_.runtimeoptions_;
}

void UpdateRuntimeOptionsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateRuntimeOptionsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateRuntimeOptionsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.instance_.ClearToEmpty();
  _impl_.pluginoptions_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.runtimeoptions_ != nullptr) {
    delete _impl_.runtimeoptions_;
  }
  _impl_.runtimeoptions_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRuntimeOptionsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string instance = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_instance();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateRuntimeOptionsRequest.instance"));
        } else
          goto handle_unusual;
        continue;
      // string pluginOptions = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_pluginoptions();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateRuntimeOptionsRequest.pluginOptions"));
        } else
          goto handle_unusual;
        continue;
      // .proto.RuntimeOptions runtimeOptions = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtimeoptions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRuntimeOptionsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateRuntimeOptionsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string instance = 1;
  if (!this->_internal_instance().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_instance().data(), static_cast<int>(this->_internal_instance().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateRuntimeOptionsRequest.instance");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_instance(), target);
  }

  // string pluginOptions = 2;
  if (!this->_internal_pluginoptions().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pluginoptions().data(), static_cast<int>(this->_internal_pluginoptions().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateRuntimeOptionsRequest.pluginOptions");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_pluginoptions(), target);
  }

  // .proto.RuntimeOptions runtimeOptions = 3;
  if (this->_internal_has_runtimeoptions()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::runtimeoptions(this),
        _Internal::runtimeoptions(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateRuntimeOptionsRequest)
  return target;
}

size_t UpdateRuntimeOptionsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateRuntimeOptionsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string instance = 1;
  if (!this->_internal_instance().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_instance());
  }

  // string pluginOptions = 2;
  if (!this->_internal_pluginoptions().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pluginoptions());
  }

  // .proto.RuntimeOptions runtimeOptions = 3;
  if (this->_internal_has_runtimeoptions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.runtimeoptions_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRuntimeOptionsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateRuntimeOptionsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRuntimeOptionsRequest::GetClassData() const { return &_class_data_; }


void UpdateRuntimeOptionsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateRuntimeOptionsRequest*>(&to_msg);
  auto& from = static_cast<const UpdateRuntimeOptionsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateRuntimeOptionsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_instance().empty()) {
    _this->_internal_set_instance(from._internal_instance());
  }
  if (!from._internal_pluginoptions().empty()) {
    _this->_internal_set_pluginoptions(from._internal_pluginoptions());
  }
  if (from._internal_has_runtimeoptions()) {
    _this->_internal_mutable_runtimeoptions()->::proto::RuntimeOptions::MergeFrom(
        from._internal_runtimeoptions());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRuntimeOptionsRequest::CopyFrom(const UpdateRuntimeOptionsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateRuntimeOptionsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRuntimeOptionsRequest::IsInitialized() const {
  return true;
}

void UpdateRuntimeOptionsRequest::InternalSwap(UpdateRuntimeOptionsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.instance_, lhs_arena,
      &other->_impl_.instance_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.pluginoptions_, lhs_arena,
      &other->_impl_.pluginoptions_, rhs_arena
  );
  swap(_impl_.runtimeoptions_, other->_impl_.runtimeoptions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRuntimeOptionsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_customisation_2eproto_getter, &descriptor_table_customisation_2eproto_once,
      file_level_metadata_customisation_2eproto[0]);
}

// ===================================================================

class UpdateRuntimeOptionsResponse::_Internal {
 public:
  static const ::proto::RuntimeOptions& runtimeoptions(const UpdateRuntimeOptionsResponse* msg);
};

const ::proto::RuntimeOptions&
UpdateRuntimeOptionsResponse::_Internal::runtimeoptions(const UpdateRuntimeOptionsResponse* msg) {
  return *msg->_impl_.runtimeoptions_;
}
UpdateRuntimeOptionsResponse::UpdateRuntimeOptionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateRuntimeOptionsResponse)
}
UpdateRuntimeOptionsResponse::UpdateRuntimeOptionsResponse(const UpdateRuntimeOptionsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateRuntimeOptionsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.runtimeoptions_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_runtimeoptions()) {
    _this->_impl_.runtimeoptions_ = new ::proto::RuntimeOptions(*from._impl_.runtimeoptions_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateRuntimeOptionsResponse)
}

inline void UpdateRuntimeOptionsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.runtimeoptions_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateRuntimeOptionsResponse::~UpdateRuntimeOptionsResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateRuntimeOptionsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateRuntimeOptionsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.runtimeoptions_;
}

void UpdateRuntimeOptionsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateRuntimeOptionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateRuntimeOptionsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.runtimeoptions_ != nullptr) {
    delete _impl_.runtimeoptions_;
  }
  _impl_.runtimeoptions_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateRuntimeOptionsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RuntimeOptions runtimeOptions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_runtimeoptions(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateRuntimeOptionsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateRuntimeOptionsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RuntimeOptions runtimeOptions = 1;
  if (this->_internal_has_runtimeoptions()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::runtimeoptions(this),
        _Internal::runtimeoptions(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateRuntimeOptionsResponse)
  return target;
}

size_t UpdateRuntimeOptionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateRuntimeOptionsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RuntimeOptions runtimeOptions = 1;
  if (this->_internal_has_runtimeoptions()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.runtimeoptions_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateRuntimeOptionsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateRuntimeOptionsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateRuntimeOptionsResponse::GetClassData() const { return &_class_data_; }


void UpdateRuntimeOptionsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateRuntimeOptionsResponse*>(&to_msg);
  auto& from = static_cast<const UpdateRuntimeOptionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateRuntimeOptionsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_runtimeoptions()) {
    _this->_internal_mutable_runtimeoptions()->::proto::RuntimeOptions::MergeFrom(
        from._internal_runtimeoptions());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateRuntimeOptionsResponse::CopyFrom(const UpdateRuntimeOptionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateRuntimeOptionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateRuntimeOptionsResponse::IsInitialized() const {
  return true;
}

void UpdateRuntimeOptionsResponse::InternalSwap(UpdateRuntimeOptionsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.runtimeoptions_, other->_impl_.runtimeoptions_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateRuntimeOptionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_customisation_2eproto_getter, &descriptor_table_customisation_2eproto_once,
      file_level_metadata_customisation_2eproto[1]);
}

// ===================================================================

class RuntimeOptions_Resolution::_Internal {
 public:
};

RuntimeOptions_Resolution::RuntimeOptions_Resolution(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.RuntimeOptions.Resolution)
}
RuntimeOptions_Resolution::RuntimeOptions_Resolution(const RuntimeOptions_Resolution& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RuntimeOptions_Resolution* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.x_, &from._impl_.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.y_) -
    reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  // @@protoc_insertion_point(copy_constructor:proto.RuntimeOptions.Resolution)
}

inline void RuntimeOptions_Resolution::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RuntimeOptions_Resolution::~RuntimeOptions_Resolution() {
  // @@protoc_insertion_point(destructor:proto.RuntimeOptions.Resolution)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RuntimeOptions_Resolution::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RuntimeOptions_Resolution::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RuntimeOptions_Resolution::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RuntimeOptions.Resolution)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.y_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.y_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RuntimeOptions_Resolution::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RuntimeOptions_Resolution::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.RuntimeOptions.Resolution)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_x(), target);
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_y(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RuntimeOptions.Resolution)
  return target;
}

size_t RuntimeOptions_Resolution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RuntimeOptions.Resolution)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->_internal_x() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_x());
  }

  // int32 y = 2;
  if (this->_internal_y() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_y());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RuntimeOptions_Resolution::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RuntimeOptions_Resolution::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RuntimeOptions_Resolution::GetClassData() const { return &_class_data_; }


void RuntimeOptions_Resolution::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RuntimeOptions_Resolution*>(&to_msg);
  auto& from = static_cast<const RuntimeOptions_Resolution&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.RuntimeOptions.Resolution)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_x() != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  if (from._internal_y() != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RuntimeOptions_Resolution::CopyFrom(const RuntimeOptions_Resolution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RuntimeOptions.Resolution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeOptions_Resolution::IsInitialized() const {
  return true;
}

void RuntimeOptions_Resolution::InternalSwap(RuntimeOptions_Resolution* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RuntimeOptions_Resolution, _impl_.y_)
      + sizeof(RuntimeOptions_Resolution::_impl_.y_)
      - PROTOBUF_FIELD_OFFSET(RuntimeOptions_Resolution, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RuntimeOptions_Resolution::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_customisation_2eproto_getter, &descriptor_table_customisation_2eproto_once,
      file_level_metadata_customisation_2eproto[2]);
}

// ===================================================================

class RuntimeOptions_PixelStreaming_WebRTC::_Internal {
 public:
};

RuntimeOptions_PixelStreaming_WebRTC::RuntimeOptions_PixelStreaming_WebRTC(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.RuntimeOptions.PixelStreaming.WebRTC)
}
RuntimeOptions_PixelStreaming_WebRTC::RuntimeOptions_PixelStreaming_WebRTC(const RuntimeOptions_PixelStreaming_WebRTC& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RuntimeOptions_PixelStreaming_WebRTC* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.maxfps_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.maxfps_ = from._impl_.maxfps_;
  // @@protoc_insertion_point(copy_constructor:proto.RuntimeOptions.PixelStreaming.WebRTC)
}

inline void RuntimeOptions_PixelStreaming_WebRTC::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.maxfps_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RuntimeOptions_PixelStreaming_WebRTC::~RuntimeOptions_PixelStreaming_WebRTC() {
  // @@protoc_insertion_point(destructor:proto.RuntimeOptions.PixelStreaming.WebRTC)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RuntimeOptions_PixelStreaming_WebRTC::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RuntimeOptions_PixelStreaming_WebRTC::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RuntimeOptions_PixelStreaming_WebRTC::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RuntimeOptions.PixelStreaming.WebRTC)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.maxfps_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RuntimeOptions_PixelStreaming_WebRTC::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 maxFPS = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.maxfps_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RuntimeOptions_PixelStreaming_WebRTC::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.RuntimeOptions.PixelStreaming.WebRTC)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 maxFPS = 1;
  if (this->_internal_maxfps() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_maxfps(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RuntimeOptions.PixelStreaming.WebRTC)
  return target;
}

size_t RuntimeOptions_PixelStreaming_WebRTC::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RuntimeOptions.PixelStreaming.WebRTC)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 maxFPS = 1;
  if (this->_internal_maxfps() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_maxfps());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RuntimeOptions_PixelStreaming_WebRTC::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RuntimeOptions_PixelStreaming_WebRTC::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RuntimeOptions_PixelStreaming_WebRTC::GetClassData() const { return &_class_data_; }


void RuntimeOptions_PixelStreaming_WebRTC::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RuntimeOptions_PixelStreaming_WebRTC*>(&to_msg);
  auto& from = static_cast<const RuntimeOptions_PixelStreaming_WebRTC&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.RuntimeOptions.PixelStreaming.WebRTC)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_maxfps() != 0) {
    _this->_internal_set_maxfps(from._internal_maxfps());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RuntimeOptions_PixelStreaming_WebRTC::CopyFrom(const RuntimeOptions_PixelStreaming_WebRTC& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RuntimeOptions.PixelStreaming.WebRTC)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeOptions_PixelStreaming_WebRTC::IsInitialized() const {
  return true;
}

void RuntimeOptions_PixelStreaming_WebRTC::InternalSwap(RuntimeOptions_PixelStreaming_WebRTC* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.maxfps_, other->_impl_.maxfps_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RuntimeOptions_PixelStreaming_WebRTC::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_customisation_2eproto_getter, &descriptor_table_customisation_2eproto_once,
      file_level_metadata_customisation_2eproto[3]);
}

// ===================================================================

class RuntimeOptions_PixelStreaming::_Internal {
 public:
  static const ::proto::RuntimeOptions_PixelStreaming_WebRTC& webrtc(const RuntimeOptions_PixelStreaming* msg);
};

const ::proto::RuntimeOptions_PixelStreaming_WebRTC&
RuntimeOptions_PixelStreaming::_Internal::webrtc(const RuntimeOptions_PixelStreaming* msg) {
  return *msg->_impl_.webrtc_;
}
RuntimeOptions_PixelStreaming::RuntimeOptions_PixelStreaming(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.RuntimeOptions.PixelStreaming)
}
RuntimeOptions_PixelStreaming::RuntimeOptions_PixelStreaming(const RuntimeOptions_PixelStreaming& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RuntimeOptions_PixelStreaming* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.webrtc_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_webrtc()) {
    _this->_impl_.webrtc_ = new ::proto::RuntimeOptions_PixelStreaming_WebRTC(*from._impl_.webrtc_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.RuntimeOptions.PixelStreaming)
}

inline void RuntimeOptions_PixelStreaming::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.webrtc_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RuntimeOptions_PixelStreaming::~RuntimeOptions_PixelStreaming() {
  // @@protoc_insertion_point(destructor:proto.RuntimeOptions.PixelStreaming)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RuntimeOptions_PixelStreaming::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.webrtc_;
}

void RuntimeOptions_PixelStreaming::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RuntimeOptions_PixelStreaming::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RuntimeOptions.PixelStreaming)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.webrtc_ != nullptr) {
    delete _impl_.webrtc_;
  }
  _impl_.webrtc_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RuntimeOptions_PixelStreaming::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RuntimeOptions.PixelStreaming.WebRTC webRTC = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_webrtc(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RuntimeOptions_PixelStreaming::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.RuntimeOptions.PixelStreaming)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RuntimeOptions.PixelStreaming.WebRTC webRTC = 1;
  if (this->_internal_has_webrtc()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::webrtc(this),
        _Internal::webrtc(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RuntimeOptions.PixelStreaming)
  return target;
}

size_t RuntimeOptions_PixelStreaming::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RuntimeOptions.PixelStreaming)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RuntimeOptions.PixelStreaming.WebRTC webRTC = 1;
  if (this->_internal_has_webrtc()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.webrtc_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RuntimeOptions_PixelStreaming::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RuntimeOptions_PixelStreaming::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RuntimeOptions_PixelStreaming::GetClassData() const { return &_class_data_; }


void RuntimeOptions_PixelStreaming::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RuntimeOptions_PixelStreaming*>(&to_msg);
  auto& from = static_cast<const RuntimeOptions_PixelStreaming&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.RuntimeOptions.PixelStreaming)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_webrtc()) {
    _this->_internal_mutable_webrtc()->::proto::RuntimeOptions_PixelStreaming_WebRTC::MergeFrom(
        from._internal_webrtc());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RuntimeOptions_PixelStreaming::CopyFrom(const RuntimeOptions_PixelStreaming& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RuntimeOptions.PixelStreaming)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeOptions_PixelStreaming::IsInitialized() const {
  return true;
}

void RuntimeOptions_PixelStreaming::InternalSwap(RuntimeOptions_PixelStreaming* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.webrtc_, other->_impl_.webrtc_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RuntimeOptions_PixelStreaming::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_customisation_2eproto_getter, &descriptor_table_customisation_2eproto_once,
      file_level_metadata_customisation_2eproto[4]);
}

// ===================================================================

RuntimeOptions_EnvironmentVariablesEntry_DoNotUse::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse() {}
RuntimeOptions_EnvironmentVariablesEntry_DoNotUse::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void RuntimeOptions_EnvironmentVariablesEntry_DoNotUse::MergeFrom(const RuntimeOptions_EnvironmentVariablesEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata RuntimeOptions_EnvironmentVariablesEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_customisation_2eproto_getter, &descriptor_table_customisation_2eproto_once,
      file_level_metadata_customisation_2eproto[5]);
}

// ===================================================================

class RuntimeOptions_VolumeMounts::_Internal {
 public:
};

RuntimeOptions_VolumeMounts::RuntimeOptions_VolumeMounts(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.RuntimeOptions.VolumeMounts)
}
RuntimeOptions_VolumeMounts::RuntimeOptions_VolumeMounts(const RuntimeOptions_VolumeMounts& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RuntimeOptions_VolumeMounts* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.mountpath_){}
    , decltype(_impl_.readonly_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.mountpath_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mountpath_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_mountpath().empty()) {
    _this->_impl_.mountpath_.Set(from._internal_mountpath(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.readonly_ = from._impl_.readonly_;
  // @@protoc_insertion_point(copy_constructor:proto.RuntimeOptions.VolumeMounts)
}

inline void RuntimeOptions_VolumeMounts::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.mountpath_){}
    , decltype(_impl_.readonly_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.mountpath_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.mountpath_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RuntimeOptions_VolumeMounts::~RuntimeOptions_VolumeMounts() {
  // @@protoc_insertion_point(destructor:proto.RuntimeOptions.VolumeMounts)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RuntimeOptions_VolumeMounts::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.mountpath_.Destroy();
}

void RuntimeOptions_VolumeMounts::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RuntimeOptions_VolumeMounts::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RuntimeOptions.VolumeMounts)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.mountpath_.ClearToEmpty();
  _impl_.readonly_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RuntimeOptions_VolumeMounts::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.RuntimeOptions.VolumeMounts.name"));
        } else
          goto handle_unusual;
        continue;
      // string mountPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_mountpath();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.RuntimeOptions.VolumeMounts.mountPath"));
        } else
          goto handle_unusual;
        continue;
      // bool readOnly = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.readonly_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RuntimeOptions_VolumeMounts::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.RuntimeOptions.VolumeMounts)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.RuntimeOptions.VolumeMounts.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string mountPath = 2;
  if (!this->_internal_mountpath().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mountpath().data(), static_cast<int>(this->_internal_mountpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.RuntimeOptions.VolumeMounts.mountPath");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_mountpath(), target);
  }

  // bool readOnly = 3;
  if (this->_internal_readonly() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_readonly(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RuntimeOptions.VolumeMounts)
  return target;
}

size_t RuntimeOptions_VolumeMounts::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RuntimeOptions.VolumeMounts)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string mountPath = 2;
  if (!this->_internal_mountpath().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mountpath());
  }

  // bool readOnly = 3;
  if (this->_internal_readonly() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RuntimeOptions_VolumeMounts::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RuntimeOptions_VolumeMounts::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RuntimeOptions_VolumeMounts::GetClassData() const { return &_class_data_; }


void RuntimeOptions_VolumeMounts::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RuntimeOptions_VolumeMounts*>(&to_msg);
  auto& from = static_cast<const RuntimeOptions_VolumeMounts&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.RuntimeOptions.VolumeMounts)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_mountpath().empty()) {
    _this->_internal_set_mountpath(from._internal_mountpath());
  }
  if (from._internal_readonly() != 0) {
    _this->_internal_set_readonly(from._internal_readonly());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RuntimeOptions_VolumeMounts::CopyFrom(const RuntimeOptions_VolumeMounts& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RuntimeOptions.VolumeMounts)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeOptions_VolumeMounts::IsInitialized() const {
  return true;
}

void RuntimeOptions_VolumeMounts::InternalSwap(RuntimeOptions_VolumeMounts* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.mountpath_, lhs_arena,
      &other->_impl_.mountpath_, rhs_arena
  );
  swap(_impl_.readonly_, other->_impl_.readonly_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RuntimeOptions_VolumeMounts::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_customisation_2eproto_getter, &descriptor_table_customisation_2eproto_once,
      file_level_metadata_customisation_2eproto[6]);
}

// ===================================================================

class RuntimeOptions::_Internal {
 public:
  static const ::proto::RuntimeOptions_Resolution& resolution(const RuntimeOptions* msg);
  static const ::proto::RuntimeOptions_PixelStreaming& pixelstreaming(const RuntimeOptions* msg);
};

const ::proto::RuntimeOptions_Resolution&
RuntimeOptions::_Internal::resolution(const RuntimeOptions* msg) {
  return *msg->_impl_.resolution_;
}
const ::proto::RuntimeOptions_PixelStreaming&
RuntimeOptions::_Internal::pixelstreaming(const RuntimeOptions* msg) {
  return *msg->_impl_.pixelstreaming_;
}
RuntimeOptions::RuntimeOptions(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &RuntimeOptions::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:proto.RuntimeOptions)
}
RuntimeOptions::RuntimeOptions(const RuntimeOptions& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RuntimeOptions* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.args_){from._impl_.args_}
    , /*decltype(_impl_.environmentvariables_)*/{}
    , decltype(_impl_.volumemounts_){from._impl_.volumemounts_}
    , decltype(_impl_.resolution_){nullptr}
    , decltype(_impl_.pixelstreaming_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.environmentvariables_.MergeFrom(from._impl_.environmentvariables_);
  if (from._internal_has_resolution()) {
    _this->_impl_.resolution_ = new ::proto::RuntimeOptions_Resolution(*from._impl_.resolution_);
  }
  if (from._internal_has_pixelstreaming()) {
    _this->_impl_.pixelstreaming_ = new ::proto::RuntimeOptions_PixelStreaming(*from._impl_.pixelstreaming_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.RuntimeOptions)
}

inline void RuntimeOptions::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.args_){arena}
    , /*decltype(_impl_.environmentvariables_)*/{::_pbi::ArenaInitialized(), arena}
    , decltype(_impl_.volumemounts_){arena}
    , decltype(_impl_.resolution_){nullptr}
    , decltype(_impl_.pixelstreaming_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RuntimeOptions::~RuntimeOptions() {
  // @@protoc_insertion_point(destructor:proto.RuntimeOptions)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void RuntimeOptions::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.args_.~RepeatedPtrField();
  _impl_.environmentvariables_.Destruct();
  _impl_.environmentvariables_.~MapField();
  _impl_.volumemounts_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.resolution_;
  if (this != internal_default_instance()) delete _impl_.pixelstreaming_;
}

void RuntimeOptions::ArenaDtor(void* object) {
  RuntimeOptions* _this = reinterpret_cast< RuntimeOptions* >(object);
  _this->_impl_.environmentvariables_.Destruct();
}
void RuntimeOptions::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RuntimeOptions::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RuntimeOptions)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.args_.Clear();
  _impl_.environmentvariables_.Clear();
  _impl_.volumemounts_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.resolution_ != nullptr) {
    delete _impl_.resolution_;
  }
  _impl_.resolution_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.pixelstreaming_ != nullptr) {
    delete _impl_.pixelstreaming_;
  }
  _impl_.pixelstreaming_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RuntimeOptions::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RuntimeOptions.Resolution resolution = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_resolution(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string args = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_args();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "proto.RuntimeOptions.args"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      // map<string, string> environmentVariables = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.environmentvariables_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.RuntimeOptions.VolumeMounts volumeMounts = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_volumemounts(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      // .proto.RuntimeOptions.PixelStreaming pixelStreaming = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_pixelstreaming(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RuntimeOptions::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.RuntimeOptions)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RuntimeOptions.Resolution resolution = 1;
  if (this->_internal_has_resolution()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::resolution(this),
        _Internal::resolution(this).GetCachedSize(), target, stream);
  }

  // repeated string args = 2;
  for (int i = 0, n = this->_internal_args_size(); i < n; i++) {
    const auto& s = this->_internal_args(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.RuntimeOptions.args");
    target = stream->WriteString(2, s, target);
  }

  // map<string, string> environmentVariables = 3;
  if (!this->_internal_environmentvariables().empty()) {
    using MapType = ::_pb::Map<std::string, std::string>;
    using WireHelper = RuntimeOptions_EnvironmentVariablesEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_environmentvariables();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "proto.RuntimeOptions.EnvironmentVariablesEntry.key");
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.second.data(), static_cast<int>(entry.second.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "proto.RuntimeOptions.EnvironmentVariablesEntry.value");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(3, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  // repeated .proto.RuntimeOptions.VolumeMounts volumeMounts = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_volumemounts_size()); i < n; i++) {
    const auto& repfield = this->_internal_volumemounts(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  // .proto.RuntimeOptions.PixelStreaming pixelStreaming = 5;
  if (this->_internal_has_pixelstreaming()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::pixelstreaming(this),
        _Internal::pixelstreaming(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RuntimeOptions)
  return target;
}

size_t RuntimeOptions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RuntimeOptions)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string args = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.args_.size());
  for (int i = 0, n = _impl_.args_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.args_.Get(i));
  }

  // map<string, string> environmentVariables = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_environmentvariables_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, std::string >::const_iterator
      it = this->_internal_environmentvariables().begin();
      it != this->_internal_environmentvariables().end(); ++it) {
    total_size += RuntimeOptions_EnvironmentVariablesEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  // repeated .proto.RuntimeOptions.VolumeMounts volumeMounts = 4;
  total_size += 1UL * this->_internal_volumemounts_size();
  for (const auto& msg : this->_impl_.volumemounts_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.RuntimeOptions.Resolution resolution = 1;
  if (this->_internal_has_resolution()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.resolution_);
  }

  // .proto.RuntimeOptions.PixelStreaming pixelStreaming = 5;
  if (this->_internal_has_pixelstreaming()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.pixelstreaming_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RuntimeOptions::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RuntimeOptions::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RuntimeOptions::GetClassData() const { return &_class_data_; }


void RuntimeOptions::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RuntimeOptions*>(&to_msg);
  auto& from = static_cast<const RuntimeOptions&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.RuntimeOptions)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.args_.MergeFrom(from._impl_.args_);
  _this->_impl_.environmentvariables_.MergeFrom(from._impl_.environmentvariables_);
  _this->_impl_.volumemounts_.MergeFrom(from._impl_.volumemounts_);
  if (from._internal_has_resolution()) {
    _this->_internal_mutable_resolution()->::proto::RuntimeOptions_Resolution::MergeFrom(
        from._internal_resolution());
  }
  if (from._internal_has_pixelstreaming()) {
    _this->_internal_mutable_pixelstreaming()->::proto::RuntimeOptions_PixelStreaming::MergeFrom(
        from._internal_pixelstreaming());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RuntimeOptions::CopyFrom(const RuntimeOptions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RuntimeOptions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RuntimeOptions::IsInitialized() const {
  return true;
}

void RuntimeOptions::InternalSwap(RuntimeOptions* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.args_.InternalSwap(&other->_impl_.args_);
  _impl_.environmentvariables_.InternalSwap(&other->_impl_.environmentvariables_);
  _impl_.volumemounts_.InternalSwap(&other->_impl_.volumemounts_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RuntimeOptions, _impl_.pixelstreaming_)
      + sizeof(RuntimeOptions::_impl_.pixelstreaming_)
      - PROTOBUF_FIELD_OFFSET(RuntimeOptions, _impl_.resolution_)>(
          reinterpret_cast<char*>(&_impl_.resolution_),
          reinterpret_cast<char*>(&other->_impl_.resolution_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RuntimeOptions::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_customisation_2eproto_getter, &descriptor_table_customisation_2eproto_once,
      file_level_metadata_customisation_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::UpdateRuntimeOptionsRequest*
Arena::CreateMaybeMessage< ::proto::UpdateRuntimeOptionsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateRuntimeOptionsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateRuntimeOptionsResponse*
Arena::CreateMaybeMessage< ::proto::UpdateRuntimeOptionsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateRuntimeOptionsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RuntimeOptions_Resolution*
Arena::CreateMaybeMessage< ::proto::RuntimeOptions_Resolution >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::RuntimeOptions_Resolution >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RuntimeOptions_PixelStreaming_WebRTC*
Arena::CreateMaybeMessage< ::proto::RuntimeOptions_PixelStreaming_WebRTC >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::RuntimeOptions_PixelStreaming_WebRTC >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RuntimeOptions_PixelStreaming*
Arena::CreateMaybeMessage< ::proto::RuntimeOptions_PixelStreaming >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::RuntimeOptions_PixelStreaming >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse*
Arena::CreateMaybeMessage< ::proto::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::RuntimeOptions_EnvironmentVariablesEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RuntimeOptions_VolumeMounts*
Arena::CreateMaybeMessage< ::proto::RuntimeOptions_VolumeMounts >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::RuntimeOptions_VolumeMounts >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RuntimeOptions*
Arena::CreateMaybeMessage< ::proto::RuntimeOptions >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::RuntimeOptions >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
